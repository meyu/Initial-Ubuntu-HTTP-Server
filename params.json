{"name":"Initial-ubuntu-http-server","tagline":"網頁伺服器的前置作業","body":"所為何來\r\n=\r\n做為一公開的網頁伺服器，連入的安全性是要謹慎的。  \r\n本文將針對登入帳號、SSH 及 IP 入侵規則進行補強。\r\n\r\n適用環境\r\n=\r\nUbuntu Server 12.04  \r\nfail2ban 0.8.10\r\n\r\n安裝方式\r\n=\r\n###登入\r\n請從本機以 root 身份登入，或從遠端以 SSH 協定登入：  \r\n(本文以伺服器的 IP 為 <code>10.10.10.10</code> 做示範，請自行修改)\r\n```bash\r\nssh root@10.10.10.10\r\n```\r\n如出現類似訊息，仍請回答 <code>yes</code>：\r\n```text\r\nThe authenticity of host '10.10.10.20 (10.10.10.20)' can't be established.\r\nECDSA key fingerprint is 11:22:33:44:55:66:77:88:99:00:aa:bb:cc:dd:ee:ff.\r\nAre you sure you want to continue connecting (yes/no)?\r\n```\r\n\r\n###更改 root 的密碼\r\n如 root 的密碼為他方給予，或自己想換組密碼，可於此時輸入：\r\n```bash\r\npasswd\r\n```\r\n\r\n###新增使用者\r\n如沒有 root 之外的使用者，或想新增一網站管理帳號：  \r\n(本文以 <code>web.admin</code> 做為示範帳號)\r\n```bash\r\nadduser web.admin\r\n```\r\n設定過程中，請雙次輸入密碼；其餘之電話、Email 資訊，可自行填入或留白。  \r\n需要注意的是，所新增的帳號並未擁有 sudo 權限，所以輸入以下指令來編輯權限設定：\r\n```bash\r\nvisudo\r\n```\r\n找到文中以下字句處：\r\n```text\r\n# User privilege specification\r\nroot    ALL=(ALL:ALL) ALL\r\n```\r\n於其下一行添加：  \r\n(<code>web.admin</code> 為本文示範帳號)\r\n```text\r\nweb.admin    ALL=(ALL:ALL) ALL\r\n```\r\n存檔後退出編輯，如此，此帳號即有使用 sudo 的權限。\r\n\r\n###修改 SSH 的設定\r\n開啟 SSH 的設定檔：\r\n```bash\r\nnano /etc/ssh/sshd_config\r\n```\r\n請分別找到以下二行：\r\n```text\r\nPort 22\r\nPermitRootLogin yes\r\n```\r\nPort 預設值為 22，為防止惡意連線，請更換為 1025 ～ 65536 間的數字，並請不要忘記你的設定 (本文以 <code>1010</code> 做為示範)。  \r\nPermitRootLogin 為設定 root 可否登入的選項，預設為 <code>yes</code>，本文建議更改為 <code>no</code>。  \r\n於文件最後，可添加以下二句，：\r\n```text\r\nUseDNS no\r\nAllowUsers web.admin\r\n```\r\nUseDNS 設定為 <code>no</code> 後，可使伺服器省略過 DNS 反向查詢，加快 SSH 登入速度；  \r\nAllowUsers 則用於限定可 SSH 登入之帳號 (本文限定 <code>web.admin</code> 為唯一登入帳號)。\r\n  \r\n存檔後退出編輯，再重新啟動 SSH：\r\n```bash\r\nreload ssh\r\n```\r\n\r\n###測試\r\n請先不要登出，保持連線，並另開一終端機介面，輸入以下指令：\r\n(<code>web.admin</code> 及 <code>10.10.10.10</code> 則皆為本文示範之帳號及伺服器 IP)\r\n```bash\r\nssh -p 1010 web.admin@10.10.10.10\r\n```\r\n其中，-p 參數代表要指定連線的 Port，<code>1010</code> 即本文先前所指定的 Port 值。  \r\n若可成功登入，代表設定無誤，即可將原來 root 的連線登出。  \r\n  \r\n日後也請使用所指定的帳號與 Port 進行登入及操作。\r\n\r\n###安裝 Fail2ban 防入侵套件\r\n安裝指令：\r\n```bash\r\nsudo apt-get install fail2ban\r\n```\r\n製作本機設定檔，並編輯之：\r\n```bash\r\nsudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local &&\r\nsudo nano /etc/fail2ban/jail.local\r\n```\r\n其中，DEFAULT 段落會如下所示：\r\n```text\r\n[DEFAULT]\r\n\r\n# \"ignoreip\" can be an IP address, a CIDR mask or a DNS host\r\nignoreip = 127.0.0.1/8\r\nbantime  = 600\r\nmaxretry = 3\r\n\r\n# \"backend\" specifies the backend used to get files modification. Available\r\n# options are \"gamin\", \"polling\" and \"auto\".\r\n# yoh: For some reason Debian shipped python-gamin didn't work as expected\r\n#      This issue left ToDo, so polling is default backend for now\r\nbackend = auto\r\n\r\n#\r\n# Destination email address used solely for the interpolations in\r\n# jail.{conf,local} configuration files.\r\ndestemail = root@localhost\r\n\r\n```\r\n段落末行的 <code>destemail = root@localhost</code> 可自行更換為自己的 Email，當 Fail2ban 有阻擋 IP 時，即會發信通知 (但先決條件是，你的伺服務要設定好 Mail Server)。  \r\n餘選項維持預設即可，有興趣者可自行研究更改。  \r\n  \r\nSSH 的段落中：\r\n```text\r\n[ssh]\r\n\r\nenabled  = true\r\nport     = ssh\r\nfilter   = sshd\r\nlogpath  = /var/log/auth.log\r\nmaxretry = 6\r\n```\r\n請將 port 值指定為你設定 SSH 登入 Port，以本文為例，將為<code>port = 1010</code>。  \r\n存檔後退出編輯，再重新啟動 Fail2ban：\r\n```bash\r\nsudo service fail2ban restart\r\n```\r\n  \r\nDONE.\r\n<br>\r\n<br>\r\n\r\n補充說明\r\n=\r\n欲查看 Fail2ban 的運作情況，可使用：\r\n```bash\r\nsudo iptables -L\r\n```\r\n\r\n參考資源\r\n=\r\n* [Initial Server Setup with Ubuntu 12.04 | DigitalOcean](https://www.digitalocean.com/community/articles/initial-server-setup-with-ubuntu-12-04)\r\n* [How to Protect SSH with fail2ban on Ubuntu 12.04 | DigitalOcean](https://www.digitalocean.com/community/articles/how-to-protect-ssh-with-fail2ban-on-ubuntu-12-04)\r\n* [Fail2ban](http://www.fail2ban.org/wiki/index.php/Main_Page)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}